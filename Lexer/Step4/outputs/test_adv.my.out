;IR code
;LABEL main
;LINK
;STOREF 0.0001 tolerance
;STOREF 7.0 num
;STOREF num approx
;STOREI 0 count
;STOREF 0.0 diff
;STOREI 0 enough
;LABEL WHILE_1_BEGIN
;EQ enough 1 WHILE_1_END
;ADDI count 1 count
;DIVF num approx $T2
;ADDF approx $T2 $T1
;MULTF 0.5 $T1 newapprox
;SUBF approx newapprox diff
;LE diff 0.0 IF_ELSE_2
;GE diff tolerance IF_ELSE_3
;STOREI 1 enough
;JUMP IF_END_3
;LABEL IF_ELSE_3
;LABEL IF_END_3
;JUMP IF_END_2
;LABEL IF_ELSE_2
;SUBF 0.0 tolerance $T3
;LE diff $T3 IF_ELSE_5
;STOREI 1 enough
;JUMP IF_END_5
;LABEL IF_ELSE_5
;LABEL IF_END_5
;LABEL IF_END_2
;STOREF newapprox approx
;JUMP WHILE_1_BEGIN
;LABEL WHILE_1_END
;WRITEF approx
;WRITEI count
;LABEL END_PGM
;RET
;tiny code
var v_count
var v_enough
var v_newapprox
var v_approx
var v_num
var v_tolerance
var v_diff
move 0.0001 v_tolerance
move 7.0 v_num
move v_num r0
move r0 v_approx
move 0 v_count
move 0.0 v_diff
move 0 v_enough
label WHILE_1_BEGIN
move 1 r0
cmpi v_enough r0
jeq WHILE_1_END
move v_count r0
addi 1 r0
move r0 v_count
move v_num r0
divr v_approx r0
move r0 r1
move v_approx r0
addr r1 r0
move r0 r2
move 0.5 r0
mulr r2 r0
move r0 v_newapprox
move v_approx r0
subr v_newapprox r0
move r0 v_diff
move 0.0 r0
cmpr v_diff r0
jle IF_ELSE_2
move v_tolerance r0
cmpr v_diff r0
jge IF_ELSE_3
move 1 v_enough
jmp IF_END_3
label IF_ELSE_3
label IF_END_3
jmp IF_END_2
label IF_ELSE_2
move 0.0 r0
subr v_tolerance r0
move r0 r3
move r3 r0
cmpr v_diff r0
jle IF_ELSE_5
move 1 v_enough
jmp IF_END_5
label IF_ELSE_5
label IF_END_5
label IF_END_2
move v_newapprox r0
move r0 v_approx
jmp WHILE_1_BEGIN
label WHILE_1_END
sys writer v_approx
sys writei v_count
label END_PGM
sys halt
end